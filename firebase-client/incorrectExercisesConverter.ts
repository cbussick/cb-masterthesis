import { CBExercise } from "@/data/exercises/CBExercise";
import { CBIncorrectStaticExercise } from "@/data/exercises/CBIncorrectStaticExercise";
import {
  FirestoreDataConverter,
  PartialWithFieldValue,
} from "firebase/firestore";

// Incorrect exercises stored in the DB can be either static exercises from within the app or dynamic exercises
// which were generated by AI and stored inside the DB.
export type CBIncorrectExercise = CBIncorrectStaticExercise | CBExercise;

export const incorrectExercisesConverter: FirestoreDataConverter<
  CBIncorrectExercise,
  PartialWithFieldValue<CBIncorrectExercise>
> = {
  toFirestore(
    incorrectExercises: PartialWithFieldValue<CBIncorrectExercise>,
  ): PartialWithFieldValue<CBIncorrectExercise> {
    return incorrectExercises;
  },
  fromFirestore(snapshot, options): CBIncorrectExercise {
    const data = snapshot.data(options);

    // Todo: Is this good to do like this?
    const castData = data as CBIncorrectExercise;

    return {
      ...castData,
    };
  },
};
